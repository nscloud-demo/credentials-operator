name: Build
concurrency:
  group: "${{github.repository}}${{ github.ref }}"
  cancel-in-progress: true

on:
  pull_request:
    types:
      - opened
      - synchronize
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

env:
  REGISTRY: main-383408/otterize

jobs:
  build:
    name: Build & Test
    runs-on: nscloud-ubuntu-22.04-amd64-4x16
    steps:
      - name: Check out the code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - uses: namespacelabs/nscloud-setup@v0
        id: nsc

      - name: Build & Test
        uses: docker/build-push-action@v2
        with:
          context: src/operator
          file: src/operator/Dockerfile
          tags: ${{ steps.nsc.outputs.registry-address }}/${{ env.REGISTRY }}/credentials-operator:${{ github.sha }}
          push: true
          platforms: linux/amd64,linux/arm64

  tag-latest:
    name: Tag latest
    if: github.ref == 'refs/heads/main'
    needs:
      - build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: GCP auth
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.B64_GCLOUD_SERVICE_ACCOUNT_JSON }}

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v1'

      # Push the Docker image to AWS ECR
      - name: Tag Images as latest
        run: |-
          retag_image_as_latest() { if [[ $(gcloud container images add-tag "${{ env.REGISTRY }}/$1:${{ github.sha }}" "${{ env.REGISTRY }}/$1:latest" --quiet) ]]; then echo "Failed tagging $1 as latest"; exit 1; fi } # using --quiet to avoid prompt
          retag_image_as_latest credentials-operator
